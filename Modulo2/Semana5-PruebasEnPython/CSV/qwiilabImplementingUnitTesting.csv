Using username "student-00-fefdfaa1a97c".
Authenticating with public key "imported-openssh-key"
Linux linux-instance 4.9.0-15-amd64 #1 SMP Debian 4.9.258-1 (2021-03-08) x86_64

The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
student-00-fefdfaa1a97c@linux-instance:~$ cd ~/data
student-00-fefdfaa1a97c@linux-instance:~/data$ ls
user_emails.csv
student-00-fefdfaa1a97c@linux-instance:~/data$ cat user_emails.csv
Blossom Gill,blossom@abc.edu,
Hayes Delgado,nonummy@abc.edu
Petra Jones,ac@abc.edu
Oleg Noel,noel@abc.edu
Ahmed Miller,ahmed.miller@abc.edu
Macaulay Douglas,mdouglas@abc.edu
Aurora Grant,enim.non@abc.edu
Madison Mcintosh,mcintosh@abc.edu
Montana Powell,montanap@abc.edu
Rogan Robinson,rr.robinson@abc.edu
Simon Rivera,sri@abc.edu
Benedict Pacheco,bpacheco@abc.edu
Maisie Hendrix,mai.hendrix@abc.edu
Xaviera Gould,xlg@abc.edu
Oren Rollins,oren@abc.edu
Flavia Santiago,flavia@abc.edu
Jackson Owens,jacksonowens@abc.edu
Britanni Humphrey,britanni@abc.edu
Kirk Nixon,kirknixon@abc.edu
Bree Campbell,breee@abc.edu
student-00-fefdfaa1a97c@linux-instance:~/data$ cd ~/scripts
student-00-fefdfaa1a97c@linux-instance:~/scripts$ ls
emails.py
student-00-fefdfaa1a97c@linux-instance:~/scripts$ cat emails.py
#!/usr/bin/env python3

import sys
import csv

def populate_dictionary(filename):
  """Populate a dictionary with name/email pairs for easy lookup."""
  email_dict = {}
  with open(filename) as csvfile:
    lines = csv.reader(csvfile, delimiter = ',')
    for row in lines:
      name = str(row[0].lower())
      email_dict[name] = row[1]
  return email_dict

def find_email(argv):
  """ Return an email address based on the username given."""
  # Create the username based on the command line input.
  fullname = str(argv[1] + " " + argv[2])
  # Preprocess the data
  email_dict = populate_dictionary('/home/student-00-fefdfaa1a97c/data/user_emai                                     ls.csv')
  # Find and print the email
  return email_dict.get(fullname.lower())

def main():
  print(find_email(sys.argv))

if __name__ == "__main__":
  main()
student-00-fefdfaa1a97c@linux-instance:~/scripts$ python3 emails.py Blossom Gill                                     blossom@abc.edu
student-00-fefdfaa1a97c@linux-instance:~/scripts$ nano ~/scripts/emails_test.py
Use "fg" to return to nano.

[1]+  Stopped                 nano ~/scripts/emails_test.py
student-00-fefdfaa1a97c@linux-instance:~/scripts$ nano ~/scripts/emails_test.py
student-00-fefdfaa1a97c@linux-instance:~/scripts$ nano ~/scripts/emails_test.py
student-00-fefdfaa1a97c@linux-instance:~/scripts$ chmod +x emails_test.py
student-00-fefdfaa1a97c@linux-instance:~/scripts$ ./emails_test.py
.
----------------------------------------------------------------------
Ran 1 test in 0.001s

OK
student-00-fefdfaa1a97c@linux-instance:~/scripts$ python3 emails.py Kirk
Traceback (most recent call last):
  File "emails.py", line 29, in <module>
    main()
  File "emails.py", line 26, in main
    print(find_email(sys.argv))
  File "emails.py", line 19, in find_email
    fullname = str(argv[1] + " " + argv[2])
IndexError: list index out of range
student-00-fefdfaa1a97c@linux-instance:~/scripts$ nano emails_test.py
student-00-fefdfaa1a97c@linux-instance:~/scripts$ ./emails_test.py
.E
======================================================================
ERROR: test_one_name (__main__.EmailsTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "./emails_test.py", line 12, in test_one_name
    self.assertEqual(find_email(testcase), expected)
  File "/home/student-00-fefdfaa1a97c/scripts/emails.py", line 19, in find_email
    fullname = str(argv[1] + " " + argv[2])
IndexError: list index out of range

----------------------------------------------------------------------
Ran 2 tests in 0.001s

FAILED (errors=1)
student-00-fefdfaa1a97c@linux-instance:~/scripts$ nano emails.py
student-00-fefdfaa1a97c@linux-instance:~/scripts$ nano emails.py
student-00-fefdfaa1a97c@linux-instance:~/scripts$ ./emails_test.py
..
----------------------------------------------------------------------
Ran 2 tests in 0.001s

OK
student-00-fefdfaa1a97c@linux-instance:~/scripts$ nano emails.py
student-00-fefdfaa1a97c@linux-instance:~/scripts$ ./emails_test.py
..
----------------------------------------------------------------------
Ran 2 tests in 0.001s

OK
student-00-fefdfaa1a97c@linux-instance:~/scripts$ nano emails_test.py
student-00-fefdfaa1a97c@linux-instance:~/scripts$ ./emails_test.py
..F
======================================================================
FAIL: test_two_name (__main__.EmailsTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "./emails_test.py", line 16, in test_two_name
    self.assertEqual(find_email(testcase), expected)
AssertionError: None != 'No email address found'

----------------------------------------------------------------------
Ran 3 tests in 0.001s

FAILED (failures=1)
student-00-fefdfaa1a97c@linux-instance:~/scripts$
student-00-fefdfaa1a97c@linux-instance:~/scripts$ nano emails.py
student-00-fefdfaa1a97c@linux-instance:~/scripts$ python3 emails_test.py
...
----------------------------------------------------------------------
Ran 3 tests in 0.001s

OK
student-00-fefdfaa1a97c@linux-instance:~/scripts$ python3 emails.py Roy Cooper
No email address found
student-00-fefdfaa1a97c@linux-instance:~/scripts$
